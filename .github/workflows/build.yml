# This name will appear in the GitHub Actions tab
name: Build Flutter Android APK

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" or "master" branch
  push:
    branches: [ "main", "master" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Java environment (version 12.x is stable for Android builds)
      - name: Set up JDK 12
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '12'

      # 3. Set up the Flutter SDK
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # Use stable channel for Flutter

      # 4. Clean Flutter project directory (Important step to prevent build issues)
      - name: Clean Flutter
        run: flutter clean

      # 5. Get Flutter dependencies
      - name: Get Flutter dependencies
        run: flutter pub get

      # 6. Build the Android APK in release mode
      - name: Build APK
        run: flutter build apk --release

      # 7. Upload the generated APK file as a workflow artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk # The name of the artifact
          path: build/app/outputs/flutter-apk/app-release.apk # The path to the APK file


